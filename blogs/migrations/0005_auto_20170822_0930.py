# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-22 13:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('blogs', '0004_blog_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pertenece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Posee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('apellido', models.CharField(max_length=255)),
                ('direccion', models.CharField(max_length=500)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('descripcion', models.CharField(max_length=500)),
                ('profesion', models.CharField(max_length=255)),
                ('imagen', models.ImageField(blank=True, upload_to='')),
                ('telefono', models.IntegerField(default=0)),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AlterModelOptions(
            name='blog',
            options={'ordering': ('id',)},
        ),
        migrations.RenameField(
            model_name='blog',
            old_name='image',
            new_name='imagen',
        ),
        migrations.RenameField(
            model_name='blog',
            old_name='title',
            new_name='titulo',
        ),
        migrations.RenameField(
            model_name='categoria',
            old_name='name',
            new_name='nombre',
        ),
        migrations.RenameField(
            model_name='habilidad',
            old_name='Nivel',
            new_name='nombre',
        ),
        migrations.RenameField(
            model_name='pais',
            old_name='name',
            new_name='nombre',
        ),
        migrations.RemoveField(
            model_name='blog',
            name='catego',
        ),
        migrations.RemoveField(
            model_name='habilidad',
            name='name',
        ),
        migrations.AddField(
            model_name='blog',
            name='fecha',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='usuario',
            name='habilidades',
            field=models.ManyToManyField(through='blogs.Posee', to='blogs.Habilidad'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.Pais'),
        ),
        migrations.AddField(
            model_name='posee',
            name='habilidad_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.Habilidad'),
        ),
        migrations.AddField(
            model_name='posee',
            name='usuario_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.Usuario'),
        ),
        migrations.AddField(
            model_name='pertenece',
            name='blog_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.Blog'),
        ),
        migrations.AddField(
            model_name='pertenece',
            name='categoria_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.Categoria'),
        ),
        migrations.AddField(
            model_name='blog',
            name='categorias',
            field=models.ManyToManyField(through='blogs.Pertenece', to='blogs.Categoria'),
        ),
    ]
